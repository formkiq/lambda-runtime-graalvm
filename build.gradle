
plugins {
    id 'java'
    id 'maven-publish'
    id 'signing'
    id 'checkstyle'
    id 'com.diffplug.spotless' version '7.0.3'
    id 'com.github.spotbugs'  version '6.1.11'
    id 'com.github.ben-manes.versions' version '0.52.0'
}

group 'com.formkiq'
version '2.5.1-SNAPSHOT'

spotbugs {
  excludeFilter = file("$rootDir/config/spotbugs/spotbugs-exclude.xml")
}
  
spotless {
  java {
    googleJavaFormat()
  }
}

spotbugsMain {
  reports {
    html {
      enabled = true
    }
  }
} 

checkstyle {
    toolVersion = '10.12.1'
	configFile file("config/checkstyle/checkstyle.xml")
	configProperties = [project_loc: "${projectDir}"]
    ignoreFailures = false
  	maxWarnings = 0
}

checkstyleMain.dependsOn spotlessApply

repositories {
  mavenLocal()
  mavenCentral()
  maven {
    url "https://oss.sonatype.org/content/repositories/snapshots/"
  }
}

check {
	  dependsOn(tasks.publishToMavenLocal)
}

java {
    withJavadocJar()
    withSourcesJar()
    
	toolchain {
		languageVersion.set(JavaLanguageVersion.of(17))
	}
}

javadoc {
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}

artifacts {
    archives jar
	
    archives javadocJar
    archives sourcesJar
}

afterEvaluate {
	   tasks.getByName('spotlessCheck').dependsOn(tasks.getByName('spotlessApply'))
}


dependencies {
	implementation group: 'com.amazonaws', name: 'aws-lambda-java-core', version: '1.2.3'
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.13.1'
    implementation group: 'joda-time', name: 'joda-time', version: '2.14.0'

    testImplementation group: 'com.amazonaws', name: 'aws-lambda-java-events', version: '3.15.0'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version:'5.11.4'
    testImplementation group: 'org.mock-server', name: 'mockserver-netty', version: '5.15.0'
    testImplementation group: 'org.slf4j', name: 'slf4j-simple', version: '2.0.17'
}

publishing {
	publications {
	    mavenJava(MavenPublication) {
	    	artifactId = 'lambda-runtime-graalvm'
	        from components.java
	        
	        pom {
                name = 'FormKiQ Lambda Runtime Graalvm'
                description = 'Lambda Runtime Graalvm'
                url = 'https://github.com/formkiq/lambda-runtime-graalvm'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'mfriesen'
                        name = 'Mike Friesen'
                        email = 'mike@formkiq.com'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/formkiq/lambda-runtime-graalvm.git'
                    developerConnection = 'scm:git:ssh://github.com/formkiq/lambda-runtime-graalvm.git'
                    url = 'https://github.com/formkiq/lambda-runtime-graalvm.git'
                }
            }
	    }
	}
	repositories {
		maven {
		  credentials {
		    username project.repoUser
		    password project.repoPassword
		  }
//		  url "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
		  url "https://oss.sonatype.org/content/repositories/snapshots/"
		}
	}
}

signing {
    sign publishing.publications.mavenJava
}

check {
    dependsOn(tasks.publishToMavenLocal)
}

test {
    failFast = true
    useJUnitPlatform()
}
